import Head from "next/head";
import Script from "next/script";

export default function Home() {
  const initialCode = `import React from "react"
  import { ChakraProvider, Box } from "@chakra-ui/react"
  
  function App(){
    return (
        <ChakraProvider>
            <Box bg="red.300">
                wow
            </Box>
        </ChakraProvider>
    )
  }
  `;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Script
        id="stripe-js"
        src="https://www.typescriptlang.org/js/vs.loader.js"
        async
        onLoad={() => {
          // For the monaco version you can use unpkg or the TypeSCript web infra CDN
          // You can see the available releases for TypeScript here:
          // https://typescript.azureedge.net/indexes/releases.json
          //
          require.config?.({
            paths: {
              vs: "https://typescript.azureedge.net/cdn/4.0.5/monaco/min/vs",
              // vs: 'https://unpkg.com/@typescript-deploys/monaco-editor@4.0.5/min/vs',
              sandbox: "https://www.typescriptlang.org/js/sandbox",
            },
            // This is something you need for monaco to work
            ignoreDuplicateModules: ["vs/editor/editor.main"],
          });
          // Grab a copy of monaco, TypeScript and the sandbox
          require([
            "vs/editor/editor.main",
            "vs/language/typescript/tsWorker",
            "sandbox/index",
          ], (main: any, _tsWorker: any, sandboxFactory: any) => {
            const isOK = main && window.ts && sandboxFactory;
            if (isOK) {
              document
                ?.getElementById("loader")
                ?.parentNode?.removeChild(document?.getElementById("loader")!);
            } else {
              console.error(
                "Could not get all the dependencies of sandbox set up!"
              );
              console.error("main", !!main, "ts", !!window.ts);
              return;
            }

            // Create a sandbox and embed it into the the div #monaco-editor-embed
            const sandboxConfig = {
              text: initialCode,
              compilerOptions: {},
              domID: "monaco-editor-embed",
            };

            const sandbox = sandboxFactory.createTypeScriptSandbox(
              sandboxConfig,
              main,
              window.ts
            );
            sandbox.editor.focus();
          });
        }}
      />
      woah
    </div>
  );
}
